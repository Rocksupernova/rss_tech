<?php

/**
 * @file
 * Contains rss_importer.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\rss_importer\Controller\RssOverviewController;

/**
 * Implements hook_help().
 */
function rss_importer_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rss_importer module.
    case 'help.page.rss_importer':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module imports content from a given rss url') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function rss_importer_theme($existing, $type, $theme, $path) {
  $themes = [];
  $themes['rss_importer'] = [
    'render element' => 'children',
  ];
  # Create the overview page
  $themes['rss_items_overview'] = [
    'template' => 'rss-items-overview',
    'variables' => [
      'data' => null,
    ],
  ];

  # Custom entity theme hooks
  $themes['rss_item'] = [
    'path' => $path . '/templates',
    'template'  => 'rss-item',
    'render element' => 'elements',
  ];
  $themes['rss_item__teaser'] = [
    'path' => $path . '/templates',
    'template'  => 'rss-item--teaser',
    'render element' => 'elements',
  ];


  return $themes;
}

/**
 * Implements hook_theme_suggestions_rss_item_alter().
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function rss_importer_theme_suggestions_rss_item_alter(array &$suggestions, array $variables, $hook) {
  # Alter theme hook when rss_item teaser is called
  if (isset($variables['elements']['#rss_item'])) {
    $content = $variables['elements'];
    if (isset($content['#view_mode']) && $content['#view_mode'] == 'teaser') {
      # Add teaser theme to rss_item custom entity
      $suggestions[] = 'rss_item__teaser';
    }
  }
}

/**
 * Implements hook_preprocess_rss_item()
 * @param $variable
 */
function rss_importer_preprocess_rss_item(&$variable) {
  # Make rss_item entity available in template when theme hook is called
  # view_mode = full
  $rss_item = $variable['elements']['#rss_item'];
  $variable['rss_item'] = $rss_item;
}

/**
 * Implements hook_preprocess_rss_item__teaser()
 * @param $variable
 */
function rss_importer_preprocess_rss_item__teaser(&$variable) {
  # Make rss_item entity available in template when theme hook is called
  # view_mode = teaser
  $rss_item = $variable['elements']['#rss_item'];
  $variable['rss_item'] = $rss_item;
}

/**
 * @param $variables
 */
function rss_importer_preprocess_page(&$variables) {
  /**
   * @Notice: Because we do not have a cronjob setup
   * we will call the cron each time a page is processed
   */
  RssOverviewController::rssCronRunImport();
}
